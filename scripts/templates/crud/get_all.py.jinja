async def get_all(self, skip: int = 0, limit: int = 100) -> List[Dict[str, Any]]:
        """Get all {{ entity.camel_name }}s with pagination"""
        try:
            query = f"""
                FOR doc IN {self.collection_name}
                LIMIT {skip}, {limit}
                RETURN doc
            """
            result = self.db.aql.execute(query)
            return [doc for doc in result]
        except Exception as e:
            logger.error(f"Error fetching {{ entity.camel_name }}s: {e}")
            raise HTTPException(status_code=500, detail=f"Error fetching {{ entity.camel_name }}s: {str(e)}")
